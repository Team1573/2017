// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc1573.Main2017Robot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.CANTalon;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static DoubleSolenoid gearsDoubleSolenoid1;
    public static CANTalon drivingFrontLeft;
    public static CANTalon drivingRearLeft;
    public static CANTalon drivingFrontRight;
    public static CANTalon drivingRearRight;
    public static RobotDrive drivingchassi;
    public static SpeedController climbingLeft;
    public static SpeedController climbingRight;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        gearsDoubleSolenoid1 = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("Gears", "Double Solenoid 1", gearsDoubleSolenoid1);
        
        drivingFrontLeft = new CANTalon(1);
        LiveWindow.addActuator("Driving", "Front Left", drivingFrontLeft);
        
        drivingRearLeft = new CANTalon(2);
        LiveWindow.addActuator("Driving", "Rear Left", drivingRearLeft);
        
        drivingFrontRight = new CANTalon(3);
        LiveWindow.addActuator("Driving", "Front Right", drivingFrontRight);
        
        drivingRearRight = new CANTalon(4);
        LiveWindow.addActuator("Driving", "Rear Right", drivingRearRight);
        
        drivingchassi = new RobotDrive(drivingFrontLeft, drivingRearLeft,
              drivingFrontRight, drivingRearRight);
        
        drivingchassi.setSafetyEnabled(true);
        drivingchassi.setExpiration(0.1);
        drivingchassi.setSensitivity(0.5);
        drivingchassi.setMaxOutput(1.0);

        drivingchassi.setInvertedMotor(RobotDrive.MotorType.kFrontRight, true);
        drivingchassi.setInvertedMotor(RobotDrive.MotorType.kRearRight, true);
        climbingLeft = new Spark(1);
        LiveWindow.addActuator("Climbing", "Left", (Spark) climbingLeft);
        
        climbingRight = new Spark(2);
        LiveWindow.addActuator("Climbing", "Right", (Spark) climbingRight);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
